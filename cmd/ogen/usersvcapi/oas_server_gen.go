// Code generated by ogen, DO NOT EDIT.

package usersvcapi

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// AddUser implements addUser operation.
	//
	// Add a new user to the store.
	//
	// POST /user
	AddUser(ctx context.Context, req *User) error
	// DeleteUser implements deleteUser operation.
	//
	// Delete an user from storage, if the user not exists the endpoint will return 500.
	//
	// DELETE /user/{userID}
	DeleteUser(ctx context.Context, params DeleteUserParams) error
	// FindUser implements findUser operation.
	//
	// Find a stored user.
	//
	// GET /user/{userID}
	FindUser(ctx context.Context, params FindUserParams) (*User, error)
	// NewError creates *ErrorStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *ErrorStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
